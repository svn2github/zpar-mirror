# The joint segmentor or tagger decoder
SRC_JOINT = $(SRC_CHINESE)/joint
DIST_JOINT = $(DIST_DIR)/joint
OBJECT_JOINT = $(OBJECT_DIR)/joint
$(OBJECT_JOINT):
	mkdir $(OBJECT_JOINT)
$(DIST_JOINT):
	mkdir $(DIST_JOINT)

$(OBJECT_JOINT)/tagger: $(OBJECT_JOINT)
	mkdir $(OBJECT_JOINT)/tagger
$(DIST_JOINT)/tagger: $(DIST_JOINT)
	mkdir $(DIST_JOINT)/tagger
joint.tagger: $(OBJECT_DIR) $(DIST_DIR) $(DIST_JOINT)/tagger $(OBJECT_JOINT)/tagger $(DIST_JOINT)/tagger/tagger $(DIST_JOINT)/tagger/train
	@echo The joint segmentor tagger is successfully compiled into $(DIST_JOINT)/tagger 

$(OBJECT_JOINT)/postagger.o: $(SRC_JOINT)/tagger/reranker.h $(SRC_JOINT)/tagger/reranker.cpp
	$(CXX) $(CXXFLAGS) -I$(SRC_CHINESE) -I$(SRC_SEGMENTOR) -I$(SRC_SEGMENTOR)/implementations/$(SEGMENTOR_IMPL) -I$(SRC_TAGGER) -I$(SRC_TAGGER)/implementations/$(CHINESE_TAGGER_IMPL) -c $(SRC_JOINT)/tagger/reranker.cpp -o $(OBJECT_JOINT)/postagger.o

$(DIST_JOINT)/tagger/tagger: $(OBJECT_JOINT)/postagger.o $(OBJECT_DIR)/segmentor.o $(OBJECT_DIR)/chinese.postagger.o $(OBJECT_TAGGER)/weight.o $(OBJECT_DIR)/reader.o $(OBJECT_DIR)/writer.o $(SRC_JOINT)/tagger/main.cpp 
	$(CXX) $(CXXFLAGS) -I$(SRC_CHINESE) -I$(SRC_SEGMENTOR) -I$(SRC_SEGMENTOR)/implementations/$(SEGMENTOR_IMPL) -I$(SRC_TAGGER) -I$(SRC_TAGGER)/implementations/$(CHINESE_TAGGER_IMPL) -c $(SRC_JOINT)/tagger/main.cpp -o $(OBJECT_JOINT)/tagger/main.o
	$(LD) $(LDFLAGS) -o $(DIST_JOINT)/tagger/tagger $(OBJECT_JOINT)/tagger/main.o $(OBJECT_JOINT)/postagger.o $(OBJECT_DIR)/segmentor.o $(OBJECT_DIR)/chinese.postagger.o $(OBJECT_TAGGER)/weight.o $(OBJECT_DIR)/reader.o $(OBJECT_DIR)/writer.o

$(DIST_JOINT)/tagger/train: $(OBJECT_JOINT)/postagger.o $(OBJECT_DIR)/segmentor.o $(OBJECT_DIR)/chinese.postagger.o $(OBJECT_TAGGER)/weight.o $(OBJECT_DIR)/reader.o $(OBJECT_DIR)/writer.o $(SRC_JOINT)/tagger/train.cpp 
	$(CXX) $(CXXFLAGS) -I$(SRC_CHINESE) -I$(SRC_SEGMENTOR) -I$(SRC_SEGMENTOR)/implementations/$(SEGMENTOR_IMPL) -I$(SRC_TAGGER) -I$(SRC_TAGGER)/implementations/$(CHINESE_TAGGER_IMPL) -c $(SRC_JOINT)/tagger/train.cpp -o $(OBJECT_JOINT)/tagger/train.o
	$(LD) $(LDFLAGS) -o $(DIST_JOINT)/tagger/train $(OBJECT_JOINT)/tagger/train.o $(OBJECT_JOINT)/postagger.o $(OBJECT_DIR)/segmentor.o $(OBJECT_DIR)/chinese.postagger.o $(OBJECT_TAGGER)/weight.o $(OBJECT_DIR)/reader.o $(OBJECT_DIR)/writer.o

#----------------------------------------------------------------
#
# the test program
#
#----------------------------------------------------------------

test: $(SRC_DIR)/test.cpp $(OBJECT_DIR) $(DIST_DIR)$(SRC_INCLUDES)/bitarray.h $(OBJECTS) 
	$(CXX) $(CXXFLAGS) -DDEBUG -c $(SRC_DIR)/test.cpp -o $(OBJECT_DIR)/test.o
	$(LD) $(LDFLAGS) -o $(DIST_DIR)/test $(OBJECT_DIR)/test.o $(OBJECT_DIR)/reader.o $(OBJECT_DIR)/writer.o $(OBJECT_DIR)/options.o

#----------------------------------------------------------------
#
# make clean
#
#----------------------------------------------------------------

.PHONY: clean spotless
spotless:
	rm -rf $(OBJECT_DIR)
	rm -f test.o
	rm -f test.exe
	rm -rf $(DIST_DIR)
	rm -f *~
	mkdir dist
	mkdir obj
